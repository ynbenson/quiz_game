import UIKit

class ResultViewController: UIViewController, UITableViewDelegate, UITableViewDataSource {
    
    var answers: [Answer] = []
    var totalCorrectAnswer = 0
    var resultMessage = ""
    @IBOutlet weak var myTableView: UITableView!
    @IBOutlet weak var resultOverviewLabel: UILabel!
    @IBOutlet weak var resultDetailLabel: UILabel!
    
    func displayResult() {
        // „É™„Ç∂„É´„Éà„ÅÆÁÇπÊï∞„Å®„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÊ±∫„ÇÅ„Çã
        for answer in answers {
            if answer.evaluation { totalCorrectAnswer += 1 }
        }
        
        var resultPercentage = Float(totalCorrectAnswer) / Float(answers.count)
        resultPercentage = round(resultPercentage*100)
        
        if resultPercentage == 100.00 {
            resultMessage = "„Ç∞„ÉÉ„Ç∏„Éß„Éñ„Åß„Åôüòöüëç"
        } else if resultPercentage >= 90.00 {
            resultMessage = "„Åä„Åó„ÅÑÔºÅ„ÅÇ„Å®Â∞ë„Åó„Åß„Åôüëè"
        } else if resultPercentage >= 80.00 {
            resultMessage = "Áâ©Áü•„Çä„Å™„Çì„Åß„Åô„Å≠üìò"
        } else if resultPercentage >= 40.00 {
            resultMessage = "ÂæÆÂ¶ô„Å™ÁµêÊûú„Åß„Åô„Å≠ü§î"
        } else {
            resultMessage = "„ÇÇ„Å£„Å®„Åå„Çì„Å∞„Çä„Åæ„Åó„Çá„ÅÜü§¨ü§¨ü§¨"
        }
        
        
        // „É™„Ç∂„É´„Éà„ÇíÂèçÊò†
        resultOverviewLabel.text = "Á∑èÂêàÊàêÁ∏æ: \(resultPercentage)%"
        resultDetailLabel.text = resultMessage
        
        // ‰∏äÈÉ®„Éê„Éº„ÅÆBack„Éú„Çø„É≥„ÇíÈö†„Åô
        navigationItem.hidesBackButton = true
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        myTableView.delegate = self
        myTableView.dataSource = self
        displayResult()
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return answers.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = myTableView.dequeueReusableCell(withIdentifier: "myCell", for: indexPath)
        cell.textLabel?.text = String(answers[indexPath.row].text) + " : " + questions[indexPath.row].text
        if answers[indexPath.row].evaluation {
            cell.backgroundColor = UIColor(red: 170/255, green: 255/255, blue: 170/255, alpha: 1)
        } else {
            cell.backgroundColor = UIColor(red: 255/255, green: 170/255, blue: 170/255, alpha: 1)
        }
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        // „Çª„É´„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Åü„ÇâURL„ÇíSafari„ÅßÈñã„Åè„ÅãËÅû„Åè
        // „Åæ„ÅöË°®Á§∫„Åô„Çã„Ç¢„É©„Éº„Éà„Çí‰ΩúÊàê
        let alert : UIAlertController = UIAlertController(title: "safari„ÇíËµ∑Âãï", message: "„Ç¢„Éó„É™„ÇíÈõ¢„Çå„Å¶safari„ÇíËµ∑Âãï„Åó„Å¶„ÇÇËâØ„ÅÑ„Åß„Åô„ÅãÔºü", preferredStyle: .alert)
        
        alert.addAction(UIAlertAction(title: "„ÅØ„ÅÑ", style: .default, handler: {
        // Yes„Å™„ÇâURL„ÇíSafari„ÅßÈñã„ÅÑ„Å¶„ÅÇ„Åí„Çã
        (action: UIAlertAction!) -> Void in
        let url = URL(string: questions[indexPath.row].url)!
        if UIApplication.shared.canOpenURL(url) {
            UIApplication.shared.open(url)
            }
        }))
        alert.addAction(UIAlertAction(title: "„ÅÑ„ÅÑ„Åà", style: .cancel, handler: nil))
        
        self.present(alert, animated: true)
    }
    

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
